{"version":3,"names":["MInputCheck","this","changeHandler","event","checked","value","target","mChange","emit","isChecked","render","label","h","onChange","class","type","name","id","mId","disabled","isDisabled","indeterminate","isIndeterminate","htmlFor"],"sources":["./src/components/m-input-check/m-input-check.tsx"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  ComponentInterface,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\n\nimport type { FormCheckType } from './m-input-check-interface';\n\n@Component({ tag: 'm-input-check' })\nexport class MInputCheck implements ComponentInterface {\n  /**\n   * Set whether is a checkbox input or a radio input\n   */\n  @Prop() type!: FormCheckType;\n\n  /**\n   * HTML Name to use within a form or JS reference\n   */\n  @Prop() name?: string;\n\n  /**\n   * Text that will be displayed beside Check input or Radio input\n   */\n  @Prop() label?: string;\n\n  /**\n   * Set checkbox or radio button marked as selected or not\n   */\n  @Prop() isChecked = false;\n\n  /**\n   * Form control identifier\n   */\n  @Prop() mId!: string;\n\n  /**\n   * Set input as disabled\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Set view of checkbox as indeterminated\n   */\n  @Prop() isIndeterminate?: boolean;\n\n  /**\n   * A string representing the value of the checkbox or radio\n   */\n  @Prop() value?: string;\n\n  /**\n   * Emitted when the switch has changed\n   */\n  @Event({ eventName: 'mChange' }) mChange!: EventEmitter;\n\n  private changeHandler = (event: Event) => {\n    const { checked, value } = (event.target as HTMLInputElement);\n    this.mChange.emit({\n      isChecked: checked,\n      value,\n    });\n  };\n\n  render() {\n    if (!this.label) {\n      return (\n        <input\n          onChange={this.changeHandler}\n          class=\"m-input-check form-check-input\"\n          type={this.type}\n          name={this.name}\n          id={this.mId}\n          value={this.value}\n          checked={this.isChecked}\n          disabled={this.isDisabled}\n          indeterminate={this.isIndeterminate}\n        />\n      );\n    }\n\n    return (\n      <div class=\"m-input-check form-check\">\n        <input\n          onChange={this.changeHandler}\n          class=\"form-check-input\"\n          type={this.type}\n          name={this.name}\n          id={this.mId}\n          value={this.value}\n          checked={this.isChecked}\n          disabled={this.isDisabled}\n          indeterminate={this.isIndeterminate}\n        />\n        <label\n          class=\"form-check-label\"\n          htmlFor={this.mId}\n        >\n          {this.label}\n        </label>\n      </div>\n    );\n  }\n}\n"],"mappings":"wDAYaA,EAAW,M,0DA8CdC,KAAAC,cAAiBC,IACvB,MAAMC,QAAEA,EAAOC,MAAEA,GAAWF,EAAMG,OAClCL,KAAKM,QAAQC,KAAK,CAChBC,UAAWL,EACXC,SACA,E,4EAhCgB,M,mCAUC,M,oDAyBrBK,SACE,IAAKT,KAAKU,MAAO,CACf,OACEC,EAAA,SACEC,SAAUZ,KAAKC,cACfY,MAAM,iCACNC,KAAMd,KAAKc,KACXC,KAAMf,KAAKe,KACXC,GAAIhB,KAAKiB,IACTb,MAAOJ,KAAKI,MACZD,QAASH,KAAKQ,UACdU,SAAUlB,KAAKmB,WACfC,cAAepB,KAAKqB,iB,CAK1B,OACEV,EAAA,OAAKE,MAAM,4BACTF,EAAA,SACEC,SAAUZ,KAAKC,cACfY,MAAM,mBACNC,KAAMd,KAAKc,KACXC,KAAMf,KAAKe,KACXC,GAAIhB,KAAKiB,IACTb,MAAOJ,KAAKI,MACZD,QAASH,KAAKQ,UACdU,SAAUlB,KAAKmB,WACfC,cAAepB,KAAKqB,kBAEtBV,EAAA,SACEE,MAAM,mBACNS,QAAStB,KAAKiB,KAEbjB,KAAKU,O"}