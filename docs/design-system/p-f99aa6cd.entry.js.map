{"version":3,"names":["MQuickActionButton","this","globalClickHandler","actionLinkText","mClick","emit","actionLinkClickHandler","event","stopPropagation","getTag","render","Tag","h","Object","assign","class","onClick","representativeIcon","size","representativeIconHasCircle","PREFIX_BS","icon","theme","representativeIconTheme","representativeIconFamilyClass","representativeIconFamilyPrefix","representativeImage","src","alt","line1","line2","type","variant","actionLinkTheme","text","actionIcon","actionIconFamilyClass","actionIconFamilyPrefix"],"sources":["./src/components/m-quick-action-button/m-quick-action-button.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  Event,\n  h,\n  Prop,\n} from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'm-quick-action-button' })\nexport class MQuickActionButton implements ComponentInterface {\n  /**\n   * The title\n   */\n  @Prop() line1!: string;\n\n  /**\n   * The subtitle\n   */\n  @Prop() line2!: string;\n\n  /**\n   * Action link text, displayed when the icon is not set\n   */\n  @Prop() actionLinkText?: string;\n\n  /**\n   * Action link theme\n   */\n  @Prop() actionLinkTheme = 'secondary';\n\n  /**\n   * The icon to indicate the action\n   */\n  @Prop() actionIcon = 'chevron-right';\n\n  /**\n   * Icon family class\n   */\n  @Prop() actionIconFamilyClass?: string;\n\n  /**\n   * Icon family class\n   */\n  @Prop() actionIconFamilyPrefix?: string;\n\n  /**\n   * Representative image\n   */\n  @Prop() representativeImage?: string;\n\n  /**\n   * Representative icon, displayed when the representativeImage is not set\n   */\n  @Prop() representativeIcon?: string;\n\n  /**\n   * Representative icon theme\n   */\n  @Prop() representativeIconTheme = 'secondary';\n\n  /**\n   * Representative icon circle\n   */\n  @Prop() representativeIconHasCircle? = false;\n\n  /**\n   * Icon family class\n   */\n  @Prop() representativeIconFamilyClass?: string;\n\n  /**\n   * Icon family class\n   */\n  @Prop() representativeIconFamilyPrefix?: string;\n\n  /**\n   * Emitted when the input value has changed\n   */\n  @Event({ eventName: 'mClick' }) mClick!: EventEmitter;\n\n  private globalClickHandler = () => {\n    if (this.actionLinkText) {\n      return;\n    }\n    this.mClick.emit();\n  };\n\n  private actionLinkClickHandler = (event: CustomEvent) => {\n    event.stopPropagation();\n\n    if (!this.actionLinkText) {\n      return;\n    }\n    this.mClick.emit();\n  };\n\n  private getTag() {\n    return this.actionLinkText ? 'div' : 'button';\n  }\n\n  render() {\n    const Tag = this.getTag();\n    return (\n      <Tag\n        class=\"m-quick-action-button\"\n        {...!this.actionLinkText && { onClick: this.globalClickHandler }}\n      >\n        {this.representativeIcon && (\n          <m-icon\n            class=\"m-quick-action-button-representative-icon\"\n            size={(\n              this.representativeIconHasCircle\n                ? `var(--${PREFIX_BS}m-quick-action-button-representative-icon-size)`\n                : `var(--${PREFIX_BS}m-quick-action-button-representative-image-size)`\n            )}\n            icon={this.representativeIcon}\n            has-circle={this.representativeIconHasCircle}\n            theme={this.representativeIconTheme}\n            family-class={this.representativeIconFamilyClass}\n            family-prefix={this.representativeIconFamilyPrefix}\n          />\n        )}\n        {this.representativeImage && (\n          <img\n            class=\"m-quick-action-button-representative-image\"\n            src={this.representativeImage}\n            alt=\"\"\n          />\n        )}\n        <div class=\"m-quick-action-button-content\">\n          <div class=\"m-quick-action-button-text\">\n            <span class=\"m-quick-action-button-line1\">\n              {this.line1}\n            </span>\n            <small class=\"m-quick-action-button-line2\">\n              {this.line2}\n            </small>\n          </div>\n        </div>\n        {this.actionLinkText ? (\n          <m-button\n            class=\"m-quick-action-button-action-link\"\n            type=\"button\"\n            variant=\"link\"\n            size=\"sm\"\n            theme={this.actionLinkTheme}\n            text={this.actionLinkText}\n            on-m-click={this.actionLinkClickHandler}\n          />\n        ) : (\n          <m-icon\n            class=\"m-quick-action-button-action-icon\"\n            icon={this.actionIcon}\n            size={`var(--${PREFIX_BS}m-quick-action-button-action-icon-size)`}\n            family-class={this.actionIconFamilyClass}\n            family-prefix={this.actionIconFamilyPrefix}\n          />\n        )}\n      </Tag>\n    );\n  }\n}\n"],"mappings":"oHAWaA,EAAkB,M,wDAuErBC,KAAAC,mBAAqB,KAC3B,GAAID,KAAKE,eAAgB,CACvB,M,CAEFF,KAAKG,OAAOC,MAAM,EAGZJ,KAAAK,uBAA0BC,IAChCA,EAAMC,kBAEN,IAAKP,KAAKE,eAAgB,CACxB,M,CAEFF,KAAKG,OAAOC,MAAM,E,6FAjEM,Y,gBAKL,gB,6KAyBa,Y,iCAKK,M,2FAiC/BI,SACN,OAAOR,KAAKE,eAAiB,MAAQ,Q,CAGvCO,SACE,MAAMC,EAAMV,KAAKQ,SACjB,OACEG,EAACD,EAAGE,OAAAC,OAAA,CACFC,MAAM,0BACDd,KAAKE,gBAAkB,CAAEa,QAASf,KAAKC,qBAE3CD,KAAKgB,oBACJL,EAAA,UACEG,MAAM,4CACNG,KACEjB,KAAKkB,4BACD,SAASC,mDACT,SAASA,oDAEfC,KAAMpB,KAAKgB,mBAAkB,aACjBhB,KAAKkB,4BACjBG,MAAOrB,KAAKsB,wBAAuB,eACrBtB,KAAKuB,8BAA6B,gBACjCvB,KAAKwB,iCAGvBxB,KAAKyB,qBACJd,EAAA,OACEG,MAAM,6CACNY,IAAK1B,KAAKyB,oBACVE,IAAI,KAGRhB,EAAA,OAAKG,MAAM,iCACTH,EAAA,OAAKG,MAAM,8BACTH,EAAA,QAAMG,MAAM,+BACTd,KAAK4B,OAERjB,EAAA,SAAOG,MAAM,+BACVd,KAAK6B,SAIX7B,KAAKE,eACJS,EAAA,YACEG,MAAM,oCACNgB,KAAK,SACLC,QAAQ,OACRd,KAAK,KACLI,MAAOrB,KAAKgC,gBACZC,KAAMjC,KAAKE,eAAc,aACbF,KAAKK,yBAGnBM,EAAA,UACEG,MAAM,oCACNM,KAAMpB,KAAKkC,WACXjB,KAAM,SAASE,2CAAkD,eACnDnB,KAAKmC,sBAAqB,gBACzBnC,KAAKoC,yB"}