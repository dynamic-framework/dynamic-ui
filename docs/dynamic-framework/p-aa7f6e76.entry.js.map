{"version":3,"names":["MButton","this","clickHandler","event","stopPropagation","mClick","emit","generateClasses","variantClass","variant","theme","Object","assign","btn","size","state","loading","isLoading","isPill","render","h","class","type","disabled","isDisabled","value","onClick","iconStart","icon","familyClass","iconStartFamilyClass","familyPrefix","iconStartFamilyPrefix","text","role","iconEnd","iconEndFamilyClass","iconEndFamilyPrefix","MIcon","PREFIX_BS","iconFamilyClass","iconFamilyPrefix","getColorStyle","color","getBackgroundStyle","backgroundColor","hasCircle","getCircleSizeStyle","circleSize","generateStyleVariables","loadingDuration","innerClass","style"],"sources":["./src/components/m-button/m-button.tsx","./src/components/m-icon/m-icon.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  Event,\n  h,\n  Prop,\n} from '@stencil/core';\n\nimport type {\n  ClassMap,\n  ComponentSize,\n  InputState,\n} from '../../utils/component-interface';\n\nimport type { ButtonType, ButtonVariant } from './m-button-interface';\n\n@Component({ tag: 'm-button' })\nexport class MButton implements ComponentInterface {\n  /**\n   * Theme to use.\n   */\n  @Prop() theme = 'primary';\n\n  /**\n   * The size\n   */\n  @Prop() size?: ComponentSize;\n\n  /**\n   * The variant to use.\n   */\n  @Prop() variant?: ButtonVariant;\n\n  /**\n   * Change the state of the button\n   */\n  @Prop() state?: InputState;\n\n  /**\n   * The text to display.\n   */\n  @Prop() text = '';\n\n  /**\n   * Icon left to display\n   */\n  @Prop() iconStart?: string;\n\n  /**\n   * Icon left family class\n   */\n  @Prop() iconStartFamilyClass?: string;\n\n  /**\n   * Icon left family prefix\n   */\n  @Prop() iconStartFamilyPrefix?: string;\n\n  /**\n   * Icon right to display\n   */\n  @Prop() iconEnd?: string;\n\n  /**\n   * Icon right family class\n   */\n  @Prop() iconEndFamilyClass?: string;\n\n  /**\n   * Icon right family prefix\n   */\n  @Prop() iconEndFamilyPrefix?: string;\n\n  /**\n   * The html value of the button.\n   */\n  @Prop() value?: string;\n\n  /**\n   * The html type of the button.\n   */\n  @Prop() type: ButtonType = 'button';\n\n  /**\n   * Flag to switch to pill button border radius.\n   */\n  @Prop() isPill = false;\n\n  /**\n   * Flag to loading state and disable button.\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Flag to disable the button, alias to state=\"disable\"\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Emitted when the button has been clicked.\n   */\n  @Event({ bubbles: false }) mClick!: EventEmitter;\n\n  private clickHandler = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.mClick.emit();\n  };\n\n  private generateClasses(): ClassMap {\n    const variantClass = this.variant\n      ? `btn-${this.variant}-${this.theme}`\n      : `btn-${this.theme}`;\n    return {\n      btn: true,\n      'm-button': true,\n      [variantClass]: true,\n      [`btn-${this.size}`]: !!this.size,\n      ...(this.state && this.state !== 'disabled') && { [this.state]: true },\n      loading: this.isLoading,\n      'rounded-pill': this.isPill,\n    };\n  }\n\n  render() {\n    return (\n      <button\n        class={this.generateClasses()}\n        type={this.type}\n        disabled={this.state === 'disabled' || this.isLoading || this.isDisabled}\n        {...this.value && { value: this.value }}\n        onClick={this.clickHandler}\n      >\n        {this.iconStart && (\n          <m-icon\n            icon={this.iconStart}\n            familyClass={this.iconStartFamilyClass}\n            familyPrefix={this.iconStartFamilyPrefix}\n          />\n        )}\n        {(this.text && !this.isLoading) && (\n          <span>{this.text}</span>\n        )}\n        {this.isLoading && (\n          <span\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          >\n            <span class=\"visually-hidden\">Loading...</span>\n          </span>\n        )}\n        {(this.iconEnd) && (\n          <m-icon\n            icon={this.iconEnd}\n            familyClass={this.iconEndFamilyClass}\n            familyPrefix={this.iconEndFamilyPrefix}\n          />\n        )}\n      </button>\n    );\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n} from '@stencil/core';\n\nimport state from '../../utils/store';\nimport type { ClassMap } from '../../utils/component-interface';\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'm-icon' })\nexport class MIcon {\n  /**\n   * Name of icon to use (in kebab-case)\n   */\n  @Prop() icon!: string;\n\n  /**\n   * Theme of the icon\n   */\n  @Prop() theme?: string;\n\n  /**\n   * Icon class\n   */\n  @Prop() innerClass?: string;\n\n  /**\n   * Size of the icon in css length unit\n   */\n  @Prop() size?: string = '1.5rem';\n\n  /**\n   * Enable loading animation\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Loading animation duration, in seconds\n   */\n  @Prop() loadingDuration = 1.8;\n\n  /**\n   * Add circle around the icon\n   */\n  @Prop() hasCircle = false;\n\n  /**\n   * Circle size in css length unit\n   */\n  @Prop() circleSize?: string = `calc(var(--${PREFIX_BS}m-icon-component-size) * 1)`;\n\n  /**\n   * Icon color in css color unit or var\n   */\n  @Prop() color?: string;\n\n  /**\n   * Icon background color in css color unit or var\n   */\n  @Prop() backgroundColor?: string;\n\n  /**\n   * Change the family class to use another icon suite\n   */\n  @Prop() familyClass?: string = state.iconFamilyClass;\n\n  /**\n   * Change the family prefix to use another icon suite\n   */\n  @Prop() familyPrefix?: string = state.iconFamilyPrefix;\n\n  private getColorStyle() {\n    if (this.color) {\n      return { [`--${PREFIX_BS}m-icon-component-color`]: this.color };\n    }\n\n    if (this.theme) {\n      return { [`--${PREFIX_BS}m-icon-component-color`]: `var(--${PREFIX_BS}${this.theme})` };\n    }\n\n    return {};\n  }\n\n  private getBackgroundStyle() {\n    if (this.backgroundColor) {\n      return { [`--${PREFIX_BS}m-icon-component-bg-color`]: this.backgroundColor };\n    }\n\n    if (this.hasCircle) {\n      if (this.theme) {\n        return { [`--${PREFIX_BS}m-icon-component-bg-color`]: `rgba(var(--${PREFIX_BS}${this.theme}-rgb), 0.1)` };\n      }\n      return { [`--${PREFIX_BS}m-icon-component-bg-color`]: `rgba(var(--${PREFIX_BS}body-color-rgb), 0.1)` };\n    }\n\n    return {};\n  }\n\n  private getCircleSizeStyle() {\n    if (this.hasCircle) {\n      return { [`--${PREFIX_BS}m-icon-component-padding`]: this.circleSize };\n    }\n    return { [`--${PREFIX_BS}m-icon-component-padding`]: '0' };\n  }\n\n  private generateStyleVariables() {\n    return {\n      [`--${PREFIX_BS}m-icon-component-size`]: this.size,\n      [`--${PREFIX_BS}m-icon-component-loading-duration`]: `${this.loadingDuration}s`,\n      ...this.getColorStyle(),\n      ...this.getBackgroundStyle(),\n      ...this.getCircleSizeStyle(),\n    };\n  }\n\n  private generateClasses(): ClassMap {\n    return {\n      'm-icon': true,\n      [`${this.innerClass}`]: !!this.innerClass,\n      [this.familyClass || state.iconFamilyClass]: true,\n      [`${this.familyPrefix || state.iconFamilyPrefix}${this.icon}`]: true,\n      'm-icon-loading': this.isLoading,\n    };\n  }\n\n  render() {\n    return (\n      <i\n        class={this.generateClasses()}\n        style={this.generateStyleVariables()}\n      />\n    );\n  }\n}\n"],"mappings":"gIAiBaA,EAAO,M,wDAsFVC,KAAAC,aAAgBC,IACtBA,EAAMC,kBACNH,KAAKI,OAAOC,MAAM,E,WApFJ,U,0EAoBD,G,6NAwCY,S,YAKV,M,eAKG,M,gBAKC,K,CAYbC,kBACN,MAAMC,EAAeP,KAAKQ,QACtB,OAAOR,KAAKQ,WAAWR,KAAKS,QAC5B,OAAOT,KAAKS,QAChB,OAAAC,OAAAC,OAAAD,OAAAC,OAAA,CACEC,IAAK,KACL,WAAY,KACZL,CAACA,GAAe,KAChB,CAAC,OAAOP,KAAKa,UAAWb,KAAKa,MACzBb,KAAKc,OAASd,KAAKc,QAAU,YAAe,CAAE,CAACd,KAAKc,OAAQ,OAAM,CACtEC,QAASf,KAAKgB,UACd,eAAgBhB,KAAKiB,Q,CAIzBC,SACE,OACEC,EAAA,SAAAT,OAAAC,OAAA,CACES,MAAOpB,KAAKM,kBACZe,KAAMrB,KAAKqB,KACXC,SAAUtB,KAAKc,QAAU,YAAcd,KAAKgB,WAAahB,KAAKuB,YAC1DvB,KAAKwB,OAAS,CAAEA,MAAOxB,KAAKwB,OAAO,CACvCC,QAASzB,KAAKC,eAEbD,KAAK0B,WACJP,EAAA,UACEQ,KAAM3B,KAAK0B,UACXE,YAAa5B,KAAK6B,qBAClBC,aAAc9B,KAAK+B,wBAGrB/B,KAAKgC,OAAShC,KAAKgB,WACnBG,EAAA,YAAOnB,KAAKgC,MAEbhC,KAAKgB,WACJG,EAAA,QACEC,MAAM,mCACNa,KAAK,SAAQ,cACD,QAEZd,EAAA,QAAMC,MAAM,mBAAiB,eAG/BpB,KAAY,SACZmB,EAAA,UACEQ,KAAM3B,KAAKkC,QACXN,YAAa5B,KAAKmC,mBAClBL,aAAc9B,KAAKoC,sB,SChJlBC,EAAK,M,sGAmBQ,S,eAKJ,M,qBAKM,I,eAKN,M,gBAKU,cAAcC,+B,qEAebxB,EAAMyB,gB,kBAKLzB,EAAM0B,gB,CAE9BC,gBACN,GAAIzC,KAAK0C,MAAO,CACd,MAAO,CAAE,CAAC,KAAKJ,2BAAoCtC,KAAK0C,M,CAG1D,GAAI1C,KAAKS,MAAO,CACd,MAAO,CAAE,CAAC,KAAK6B,2BAAoC,SAASA,IAAYtC,KAAKS,S,CAG/E,MAAO,E,CAGDkC,qBACN,GAAI3C,KAAK4C,gBAAiB,CACxB,MAAO,CAAE,CAAC,KAAKN,8BAAuCtC,KAAK4C,gB,CAG7D,GAAI5C,KAAK6C,UAAW,CAClB,GAAI7C,KAAKS,MAAO,CACd,MAAO,CAAE,CAAC,KAAK6B,8BAAuC,cAAcA,IAAYtC,KAAKS,mB,CAEvF,MAAO,CAAE,CAAC,KAAK6B,8BAAuC,cAAcA,yB,CAGtE,MAAO,E,CAGDQ,qBACN,GAAI9C,KAAK6C,UAAW,CAClB,MAAO,CAAE,CAAC,KAAKP,6BAAsCtC,KAAK+C,W,CAE5D,MAAO,CAAE,CAAC,KAAKT,6BAAsC,I,CAG/CU,yBACN,OAAAtC,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,CACE,CAAC,KAAK2B,0BAAmCtC,KAAKa,KAC9C,CAAC,KAAKyB,sCAA+C,GAAGtC,KAAKiD,oBAC1DjD,KAAKyC,iBACLzC,KAAK2C,sBACL3C,KAAK8C,qB,CAIJxC,kBACN,MAAO,CACL,SAAU,KACV,CAAC,GAAGN,KAAKkD,gBAAiBlD,KAAKkD,WAC/B,CAAClD,KAAK4B,aAAed,EAAMyB,iBAAkB,KAC7C,CAAC,GAAGvC,KAAK8B,cAAgBhB,EAAM0B,mBAAmBxC,KAAK2B,QAAS,KAChE,iBAAkB3B,KAAKgB,U,CAI3BE,SACE,OACEC,EAAA,KACEC,MAAOpB,KAAKM,kBACZ6C,MAAOnD,KAAKgD,0B"}