{"version":3,"names":["DInputSearch","this","changeHandler","event","stopPropagation","eventChange","emit","detail","toString","clickHandler","eventClick","_a","htmlInput","value","render","h","ref","el","innerId","name","label","labelIcon","labelIconFamilyClass","labelIconFamilyPrefix","placeholder","iconEnd","isDisabled","isReadOnly","isLoading","hint","isInvalid","isValid","onEventChange","onEventIconEndClick"],"sources":["./src/components/d-input-search/d-input-search.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  Event,\n  h,\n  Prop,\n} from '@stencil/core';\n\n@Component({ tag: 'd-input-search' })\nexport class DInputSearch implements ComponentInterface {\n  /**\n   * The id of the input\n   */\n  @Prop() innerId!: string;\n\n  /**\n   * The name of the input\n   */\n  @Prop() name?: string;\n\n  /**\n    * The label text\n    */\n  @Prop() label = '';\n\n  /**\n    * Icon to display on label right\n    */\n  @Prop() labelIcon?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyClass?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyPrefix?: string;\n\n  /**\n    * The placeholder text\n    */\n  @Prop() placeholder = '';\n\n  /**\n    * The value of the input\n    */\n  @Prop() value = '';\n\n  /**\n    * Flag to disable the input\n    */\n  @Prop() isDisabled = false;\n\n  /**\n   * Flag to read only the input\n   */\n  @Prop() isReadOnly = false;\n\n  /**\n   * Flag for loading state.\n  */\n  @Prop() isLoading = false;\n\n  /**\n    * Hint to display, also used to display validity feedback\n    */\n  @Prop() hint?: string;\n\n  /**\n   * Add is-invalid class\n   */\n  @Prop() isInvalid = false;\n\n  /**\n   * Add is-valid class\n   */\n  @Prop() isValid = false;\n\n  /**\n   * Emitted when the input value has changed\n   */\n  @Event() eventChange!: EventEmitter<string>;\n\n  /**\n   * Emitted when the button is clicked\n   */\n  @Event() eventClick!: EventEmitter<string>;\n\n  /**\n   * HTML d-input element\n   */\n  private htmlInput?: HTMLDInputElement;\n\n  private changeHandler = (event: CustomEvent<string | number>) => {\n    event.stopPropagation();\n    this.eventChange.emit(event.detail.toString());\n  };\n\n  private clickHandler = (event: CustomEvent) => {\n    event.stopPropagation();\n    this.eventClick.emit(this.htmlInput?.value.toString());\n  };\n\n  render() {\n    return (\n      <d-input\n        // eslint-disable-next-line no-return-assign\n        ref={(el) => (this.htmlInput = el)}\n        innerId={this.innerId}\n        name={this.name}\n        label={this.label}\n        labelIcon={this.labelIcon}\n        labelIconFamilyClass={this.labelIconFamilyClass}\n        labelIconFamilyPrefix={this.labelIconFamilyPrefix}\n        placeholder={this.placeholder}\n        value={this.value}\n        iconEnd=\"search\"\n        isDisabled={this.isDisabled}\n        isReadOnly={this.isReadOnly}\n        isLoading={this.isLoading}\n        hint={this.hint}\n        isInvalid={this.isInvalid}\n        isValid={this.isValid}\n        onEventChange={this.changeHandler}\n        onEventIconEndClick={this.clickHandler}\n      />\n    );\n  }\n}\n"],"mappings":"wDASaA,EAAY,M,yGAsFfC,KAAAC,cAAiBC,IACvBA,EAAMC,kBACNH,KAAKI,YAAYC,KAAKH,EAAMI,OAAOC,WAAW,EAGxCP,KAAAQ,aAAgBN,I,MACtBA,EAAMC,kBACNH,KAAKS,WAAWJ,MAAKK,EAAAV,KAAKW,aAAS,MAAAD,SAAA,SAAAA,EAAEE,MAAML,WAAW,E,sDA/ExC,G,mHAoBM,G,WAKN,G,gBAKK,M,gBAKA,M,eAKD,M,mCAUA,M,aAKF,K,CA2BlBM,SACE,OACEC,EAAA,WAEEC,IAAMC,GAAQhB,KAAKW,UAAYK,EAC/BC,QAASjB,KAAKiB,QACdC,KAAMlB,KAAKkB,KACXC,MAAOnB,KAAKmB,MACZC,UAAWpB,KAAKoB,UAChBC,qBAAsBrB,KAAKqB,qBAC3BC,sBAAuBtB,KAAKsB,sBAC5BC,YAAavB,KAAKuB,YAClBX,MAAOZ,KAAKY,MACZY,QAAQ,SACRC,WAAYzB,KAAKyB,WACjBC,WAAY1B,KAAK0B,WACjBC,UAAW3B,KAAK2B,UAChBC,KAAM5B,KAAK4B,KACXC,UAAW7B,KAAK6B,UAChBC,QAAS9B,KAAK8B,QACdC,cAAe/B,KAAKC,cACpB+B,oBAAqBhC,KAAKQ,c"}