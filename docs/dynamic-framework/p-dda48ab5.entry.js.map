{"version":3,"names":["DModal","this","closeHandler","eventClose","emit","componentWillLoad","header","el","querySelector","body","footer","fullScreenClass","isFullScreen","fullScreenFrom","generateModalDialogClasses","isCentered","isScrollable","modalSize","render","h","Object","assign","class","id","name","tabindex","isStatic","PREFIX_BS","showCloseButton","type","onClick","icon","footerActionPlacement"],"sources":["./src/components/d-modal/d-modal.tsx"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\n\nimport { ClassMap } from '../../utils/component-interface';\nimport { PREFIX_BS } from '../../utils';\n\nimport { ModalSize, FullScreenFrom } from './d-modal-interface';\n\n@Component({ tag: 'd-modal' })\nexport class DModal {\n  @Element() el!: HTMLDModalElement;\n\n  /**\n   * the name of the modal\n   */\n  @Prop() name!: string;\n\n  /**\n   * Is backdrop static\n   */\n  @Prop() isStatic?: boolean;\n\n  /**\n   * Is modal scrollable\n   */\n  @Prop() isScrollable?: boolean;\n\n  /**\n   * Is modal centered\n   */\n  @Prop() isCentered?: boolean;\n\n  /**\n   * Is fullscreen in all sizes\n   */\n  @Prop() isFullScreen?: boolean;\n\n  /**\n   * Minimum size to apply the fullscreen\n   */\n  @Prop() fullScreenFrom?: FullScreenFrom;\n\n  /**\n   * Modal size\n   */\n  @Prop() modalSize?: ModalSize;\n\n  /**\n   * No display close button\n   */\n  @Prop() showCloseButton?: boolean;\n\n  /**\n   * Footer action direction\n   */\n  @Prop() footerActionPlacement?: 'start' | 'end' | 'fill' | 'center' = 'fill';\n\n  /**\n   * Emitted when the input value has changed\n   */\n  @Event() eventClose!: EventEmitter<void>;\n\n  componentWillLoad() {\n    this.header = !!this.el.querySelector('[slot=\"header\"]');\n    this.body = !!this.el.querySelector('[slot=\"body\"]');\n    this.footer = !!this.el.querySelector('[slot=\"footer\"]');\n  }\n\n  private header!: boolean;\n  private body!: boolean;\n  private footer!: boolean;\n\n  private closeHandler = () => {\n    this.eventClose.emit();\n  };\n\n  private fullScreenClass(): string {\n    if (this.isFullScreen) {\n      if (this.fullScreenFrom) {\n        return `modal-fullscreen-${this.fullScreenFrom}-down`;\n      }\n      return 'modal-fullscreen';\n    }\n    return '';\n  }\n\n  private generateModalDialogClasses(): ClassMap {\n    return {\n      'modal-dialog': true,\n      'modal-dialog-centered': !!this.isCentered,\n      'modal-dialog-scrollable': !!this.isScrollable,\n      [`modal-${this.modalSize}`]: !!this.modalSize,\n      [this.fullScreenClass()]: !!this.isFullScreen,\n    };\n  }\n\n  render() {\n    return (\n      <div\n        class=\"modal fade show\"\n        id={this.name}\n        tabindex=\"-1\"\n        aria-labelledby={`${this.name}Label`}\n        aria-hidden=\"false\"\n        {...this.isStatic && ({\n          [`data-${PREFIX_BS}backdrop`]: 'static',\n          [`data-${PREFIX_BS}keyboard`]: 'false',\n        })}\n      >\n        <div class={this.generateModalDialogClasses()}>\n          <div class=\"modal-content\">\n            {(this.header || this.showCloseButton) && (\n              <div\n                class=\"modal-header\"\n              >\n                {this.showCloseButton && (\n                  <button\n                    type=\"button\"\n                    class=\"d-modal-close\"\n                    aria-label=\"Close\"\n                    onClick={this.closeHandler}\n                  >\n                    <d-icon icon=\"x-lg\" />\n                  </button>\n                )}\n                {this.header && (\n                  <div class=\"d-modal-slot\">\n                    <slot name=\"header\" />\n                  </div>\n                )}\n              </div>\n            )}\n            {this.body && (\n              <div class=\"d-modal-slot modal-body\">\n                <slot name=\"body\" />\n              </div>\n            )}\n            {this.footer && (\n              <div class=\"d-modal-separator\" />\n            )}\n            {this.footer && (\n              <div class={`d-modal-slot modal-footer d-modal-action-${this.footerActionPlacement}`}>\n                <slot name=\"footer\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"sHAeaA,EAAM,M,gEA+DTC,KAAAC,aAAe,KACrBD,KAAKE,WAAWC,MAAM,E,+OAlB8C,M,CAOtEC,oBACEJ,KAAKK,SAAWL,KAAKM,GAAGC,cAAc,mBACtCP,KAAKQ,OAASR,KAAKM,GAAGC,cAAc,iBACpCP,KAAKS,SAAWT,KAAKM,GAAGC,cAAc,kB,CAWhCG,kBACN,GAAIV,KAAKW,aAAc,CACrB,GAAIX,KAAKY,eAAgB,CACvB,MAAO,oBAAoBZ,KAAKY,qB,CAElC,MAAO,kB,CAET,MAAO,E,CAGDC,6BACN,MAAO,CACL,eAAgB,KAChB,0BAA2Bb,KAAKc,WAChC,4BAA6Bd,KAAKe,aAClC,CAAC,SAASf,KAAKgB,eAAgBhB,KAAKgB,UACpC,CAAChB,KAAKU,qBAAsBV,KAAKW,a,CAIrCM,SACE,OACEC,EAAA,MAAAC,OAAAC,OAAA,CACEC,MAAM,kBACNC,GAAItB,KAAKuB,KACTC,SAAS,KAAI,kBACI,GAAGxB,KAAKuB,YAAW,cACxB,SACRvB,KAAKyB,UAAQ,CACf,CAAC,QAAQC,aAAsB,SAC/B,CAAC,QAAQA,aAAsB,UAGjCR,EAAA,OAAKG,MAAOrB,KAAKa,8BACfK,EAAA,OAAKG,MAAM,kBACPrB,KAAKK,QAAUL,KAAK2B,kBACpBT,EAAA,OACEG,MAAM,gBAELrB,KAAK2B,iBACJT,EAAA,UACEU,KAAK,SACLP,MAAM,gBAAe,aACV,QACXQ,QAAS7B,KAAKC,cAEdiB,EAAA,UAAQY,KAAK,UAGhB9B,KAAKK,QACJa,EAAA,OAAKG,MAAM,gBACTH,EAAA,QAAMK,KAAK,aAKlBvB,KAAKQ,MACJU,EAAA,OAAKG,MAAM,2BACTH,EAAA,QAAMK,KAAK,UAGdvB,KAAKS,QACJS,EAAA,OAAKG,MAAM,sBAEZrB,KAAKS,QACJS,EAAA,OAAKG,MAAO,4CAA4CrB,KAAK+B,yBAC3Db,EAAA,QAAMK,KAAK,c"}