{"file":"index.cjs.js","mappings":";;;;;;;;;AAAA;AACA,qBAAe;EACb,OAAO,EAAE,EAAE;EACX,MAAM,EAAE,SAAgB;EACxB,IAAI,CAAC,OAAY,EAAE,MAAW;IAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAEvB,IAAI,MAAM,EAAE;;MAEV,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC;QAC9B,aAAa,EAAE,IAAI;QACnB,eAAe,EAAE,IAAI;OACtB,CAAC,CAAC;KACJ;GACF;;;;;;EAMD,MAAM,gBAAgB,CAAC,YAAoB;IACzC,IAAI;MACF,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/D;IAAC,OAAO,KAAU,EAAE;MACnB,OAAO,KAAK,CAAC,OAAO,CAAC;KACtB;GACF;;;;;;EAMD,WAAW,CAAC,YAAoB;IAC9B,IAAI;MACF,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACnE;IAAC,OAAO,KAAU,EAAE;MACnB,OAAO,KAAK,CAAC,OAAO,CAAC;KACtB;GACF;EACD,KAAK,CAAC,YAAoB;IACxB,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;KACvC;IACD,OAAO,YAAY,CAAC;GACrB;EACD,MAAM,UAAU,CAAC,YAAoB;IACnC,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;KAC5C;IACD,OAAO,YAAY,CAAC;GACrB;CACF;;SChDuB,cAAc,CACpC,MAAc,EACd,OAAgB;EAEhB,OAAOA,kBAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;AAC5C;;ACIA;;;;;SAKwB,uBAAuB,CAC7C,MAAqB,EACrB,MAA6B;EAE7B,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;EAC9C,OAAO;IACL,OAAO,EAAE;MACP,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,OAAO,iCAChC,MAAM,KACT,MAAM,EAAE,eAAe,CAAC,MAAM,IAC9B,CAAC;MACH,OAAO,IAAI,CAAC;KACb;IACD,KAAK,EAAE,MAAM,eAAe,CAAC,KAAK,EAAE;GACrC,CAAC;AACJ;;MChCqB,QAAQ;EAQ3B;IACE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;MACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;MACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB,CAAC,CAAC;GACJ;;;ACXH;;;;;SAKwB,mBAAmB,CACzC,IAAO;EAEP,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAQ,CAAC;EACtC,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,QAAQ,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;EACzD,OAAO;IACL,KAAK,EAAE;MACL,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;MACzC,YAAY,CAAC,KAAK,CAAC,CAAC;KACrB;IACD,OAAO,EAAE;MACP,MAAM,QAAQ,CAAC,OAAO,CAAC;MACvB,OAAO,IAAoB,CAAC;KAC7B;GACF,CAAC;AACJ;;;;;;;;;;;;;","names":["currency"],"sources":["./src/utils/liquid-parser.ts","./src/utils/format-currency.ts","./src/utils/create-controlled-request.ts","./src/utils/Deferred.ts","./src/utils/create-mocked-request.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport default {\n  library: {},\n  engine: undefined as any,\n  init(library: any, Liquid: any) {\n    this.library = library;\n\n    if (Liquid) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n      this.engine = new Liquid.Liquid({\n        strictFilters: true,\n        strictVariables: true,\n      });\n    }\n  },\n  /**\n   * Parse a liquid string\n   * @param liquidString Target Content Space UID\n   * @returns a usable object or string\n   */\n  async parseLiquidAsync(liquidString: string): Promise<string> {\n    try {\n      return this.engine.parseAndRender(liquidString, this.library);\n    } catch (error: any) {\n      return error.message;\n    }\n  },\n  /**\n   * Parse a liquid string\n   * @param liquidString Target Content Space UID\n   * @returns a usable object or string\n   */\n  parseLiquid(liquidString: string): string {\n    try {\n      return this.engine.parseAndRenderSync(liquidString, this.library);\n    } catch (error: any) {\n      return error.message;\n    }\n  },\n  parse(liquidString: string): string {\n    if (this.engine) {\n      return this.parseLiquid(liquidString);\n    }\n    return liquidString;\n  },\n  async parseAsync(liquidString: string): Promise<string> {\n    if (this.engine) {\n      return this.parseLiquidAsync(liquidString);\n    }\n    return liquidString;\n  },\n};\n","import currency from 'currency.js';\nimport type { Options } from 'currency.js';\n\nexport default function formatCurrency(\n  amount: number,\n  options: Options,\n): string {\n  return currency(amount, options).format();\n}\n","import {\n  AxiosInstance,\n  AxiosRequestConfig,\n} from 'axios';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ControlledRequest<ResponseData, RequestData = any> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,max-len\n  perform: (config?: { data?: RequestData; params?: any }) => Promise<ResponseData>;\n  abort: () => void;\n};\n\n/**\n * @deprecated\n * @param client\n * @param config\n */\nexport default function createControlledRequest<T, R = T>(\n  client: AxiosInstance,\n  config: AxiosRequestConfig<T>,\n): ControlledRequest<R, T> {\n  const abortController = new AbortController();\n  return {\n    perform: async () => {\n      const { data } = await client.request<R>({\n        ...config,\n        signal: abortController.signal,\n      });\n      return data;\n    },\n    abort: () => abortController.abort(),\n  };\n}\n","export default class Deferred<T> {\n  resolve!: ((value: T) => void);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reject!: ((reason: any) => void);\n\n  promise: Promise<T>;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n","import Deferred from './Deferred';\n\n/**\n * @deprecated\n * @param config\n * @param data\n */\nexport default function createMockedRequest<T, R = T>(\n  data: R,\n) {\n  const deferred = new Deferred<void>();\n  const timer = setTimeout(() => deferred.resolve(), 1000);\n  return {\n    abort: () => {\n      deferred.reject(new Error('AbortError'));\n      clearTimeout(timer);\n    },\n    perform: async (): Promise<R> => {\n      await deferred.promise;\n      return data as unknown as R;\n    },\n  };\n}\n"],"version":3}