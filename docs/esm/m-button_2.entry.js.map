{"file":"m-button.m-icon.entry.js","mappings":"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","names":[],"sources":["./src/components/m-button/m-button.tsx","./src/components/m-icon/m-icon.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  Event,\n  h,\n  Prop,\n} from '@stencil/core';\n\nimport type {\n  ClassMap,\n  ComponentSize,\n  InputState,\n} from '../../utils/component-interface';\n\nimport type { ButtonType, ButtonVariant } from './m-button-interface';\n\n@Component({ tag: 'm-button' })\nexport class MButton implements ComponentInterface {\n  /**\n   * Theme to use.\n   */\n  @Prop() theme = 'primary';\n\n  /**\n   * The size\n   */\n  @Prop() size?: ComponentSize;\n\n  /**\n   * The variant to use.\n   */\n  @Prop() variant?: ButtonVariant;\n\n  /**\n   * Change the state of the button\n   */\n  @Prop() state?: InputState;\n\n  /**\n   * The text to display.\n   */\n  @Prop() text = '';\n\n  /**\n   * Icon left to display\n   */\n  @Prop() iconStart?: string;\n\n  /**\n   * Icon left family class\n   */\n  @Prop() iconStartFamilyClass?: string;\n\n  /**\n   * Icon left family prefix\n   */\n  @Prop() iconStartFamilyPrefix?: string;\n\n  /**\n   * Icon right to display\n   */\n  @Prop() iconEnd?: string;\n\n  /**\n   * Icon right family class\n   */\n  @Prop() iconEndFamilyClass?: string;\n\n  /**\n   * Icon right family prefix\n   */\n  @Prop() iconEndFamilyPrefix?: string;\n\n  /**\n   * The html value of the button.\n   */\n  @Prop() value?: string;\n\n  /**\n   * The html type of the button.\n   */\n  @Prop() type: ButtonType = 'button';\n\n  /**\n   * Flag to switch to pill button border radius.\n   */\n  @Prop() isPill = false;\n\n  /**\n   * Flag to loading state and disable button.\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Flag to disable the button, alias to state=\"disable\"\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Emitted when the button has been clicked.\n   */\n  @Event({ bubbles: false }) mClick!: EventEmitter;\n\n  private clickHandler = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.mClick.emit();\n  };\n\n  private generateClasses(): ClassMap {\n    const variantClass = this.variant\n      ? `btn-${this.variant}-${this.theme}`\n      : `btn-${this.theme}`;\n    return {\n      btn: true,\n      'm-button': true,\n      [variantClass]: true,\n      [`btn-${this.size}`]: !!this.size,\n      ...(this.state && this.state !== 'disabled') && { [this.state]: true },\n      loading: this.isLoading,\n      'rounded-pill': this.isPill,\n    };\n  }\n\n  render() {\n    return (\n      <button\n        class={this.generateClasses()}\n        type={this.type}\n        disabled={this.state === 'disabled' || this.isLoading || this.isDisabled}\n        {...this.value && { value: this.value }}\n        onClick={this.clickHandler}\n      >\n        {this.iconStart && (\n          <m-icon\n            icon={this.iconStart}\n            familyClass={this.iconStartFamilyClass}\n            familyPrefix={this.iconStartFamilyPrefix}\n          />\n        )}\n        {(this.text && !this.isLoading) && (\n          <span>{this.text}</span>\n        )}\n        {this.isLoading && (\n          <span\n            class=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          >\n            <span class=\"visually-hidden\">Loading...</span>\n          </span>\n        )}\n        {(this.iconEnd) && (\n          <m-icon\n            icon={this.iconEnd}\n            familyClass={this.iconEndFamilyClass}\n            familyPrefix={this.iconEndFamilyPrefix}\n          />\n        )}\n      </button>\n    );\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n} from '@stencil/core';\n\nimport state from '../../utils/store';\nimport type { ClassMap } from '../../utils/component-interface';\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'm-icon' })\nexport class MIcon {\n  /**\n   * Name of icon to use (in kebab-case)\n   */\n  @Prop() icon!: string;\n\n  /**\n   * Theme of the icon\n   */\n  @Prop() theme?: string;\n\n  /**\n   * Icon class\n   */\n  @Prop() innerClass?: string;\n\n  /**\n   * Size of the icon in css length unit\n   */\n  @Prop() size?: string = '1.5rem';\n\n  /**\n   * Enable loading animation\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Loading animation duration, in seconds\n   */\n  @Prop() loadingDuration = 1.8;\n\n  /**\n   * Add circle around the icon\n   */\n  @Prop() hasCircle = false;\n\n  /**\n   * Circle size in css length unit\n   */\n  @Prop() circleSize?: string = `calc(var(--${PREFIX_BS}m-icon-component-size) * 1)`;\n\n  /**\n   * Icon color in css color unit or var\n   */\n  @Prop() color?: string;\n\n  /**\n   * Icon background color in css color unit or var\n   */\n  @Prop() backgroundColor?: string;\n\n  /**\n   * Change the family class to use another icon suite\n   */\n  @Prop() familyClass?: string = state.iconFamilyClass;\n\n  /**\n   * Change the family prefix to use another icon suite\n   */\n  @Prop() familyPrefix?: string = state.iconFamilyPrefix;\n\n  private getColorStyle() {\n    if (this.color) {\n      return { [`--${PREFIX_BS}m-icon-component-color`]: this.color };\n    }\n\n    if (this.theme) {\n      return { [`--${PREFIX_BS}m-icon-component-color`]: `var(--${PREFIX_BS}${this.theme})` };\n    }\n\n    return {};\n  }\n\n  private getBackgroundStyle() {\n    if (this.backgroundColor) {\n      return { [`--${PREFIX_BS}m-icon-component-bg-color`]: this.backgroundColor };\n    }\n\n    if (this.hasCircle) {\n      if (this.theme) {\n        return { [`--${PREFIX_BS}m-icon-component-bg-color`]: `rgba(var(--${PREFIX_BS}${this.theme}-rgb), 0.1)` };\n      }\n      return { [`--${PREFIX_BS}m-icon-component-bg-color`]: `rgba(var(--${PREFIX_BS}body-color-rgb), 0.1)` };\n    }\n\n    return {};\n  }\n\n  private getCircleSizeStyle() {\n    if (this.hasCircle) {\n      return { [`--${PREFIX_BS}m-icon-component-padding`]: this.circleSize };\n    }\n    return { [`--${PREFIX_BS}m-icon-component-padding`]: '0' };\n  }\n\n  private generateStyleVariables() {\n    return {\n      [`--${PREFIX_BS}m-icon-component-size`]: this.size,\n      [`--${PREFIX_BS}m-icon-component-loading-duration`]: `${this.loadingDuration}s`,\n      ...this.getColorStyle(),\n      ...this.getBackgroundStyle(),\n      ...this.getCircleSizeStyle(),\n    };\n  }\n\n  private generateClasses(): ClassMap {\n    return {\n      'm-icon': true,\n      [`${this.innerClass}`]: !!this.innerClass,\n      [this.familyClass || state.iconFamilyClass]: true,\n      [`${this.familyPrefix || state.iconFamilyPrefix}${this.icon}`]: true,\n      'm-icon-loading': this.isLoading,\n    };\n  }\n\n  render() {\n    return (\n      <i\n        class={this.generateClasses()}\n        style={this.generateStyleVariables()}\n      />\n    );\n  }\n}\n"],"version":3}