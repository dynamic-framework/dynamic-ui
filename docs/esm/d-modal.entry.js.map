{"file":"d-modal.entry.js","mappings":";;;;MAea,MAAM;;;;IA+DT,iBAAY,GAAG;MACrB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB,CAAC;;;;;;;;;iCAnBoE,MAAM;;EAO5E,iBAAiB;IACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;IACzD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IACrD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;GAC1D;EAUO,eAAe;IACrB,IAAI,IAAI,CAAC,YAAY,EAAE;MACrB,IAAI,IAAI,CAAC,cAAc,EAAE;QACvB,OAAO,oBAAoB,IAAI,CAAC,cAAc,OAAO,CAAC;OACvD;MACD,OAAO,kBAAkB,CAAC;KAC3B;IACD,OAAO,EAAE,CAAC;GACX;EAEO,0BAA0B;IAChC,OAAO;MACL,cAAc,EAAE,IAAI;MACpB,uBAAuB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU;MAC1C,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY;MAC9C,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS;MAC7C,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY;KAC9C,CAAC;GACH;EAED,MAAM;IACJ,QACE,yBACE,KAAK,EAAC,iBAAiB,EACvB,EAAE,EAAE,IAAI,CAAC,IAAI,EACb,QAAQ,EAAC,IAAI,qBACI,GAAG,IAAI,CAAC,IAAI,OAAO,iBACxB,OAAO,IACf,IAAI,CAAC,QAAQ,KAAK;MACpB,CAAC,QAAQ,SAAS,UAAU,GAAG,QAAQ;MACvC,CAAC,QAAQ,SAAS,UAAU,GAAG,OAAO;KACvC,CAAC,GAEF,WAAK,KAAK,EAAE,IAAI,CAAC,0BAA0B,EAAE,IAC3C,WAAK,KAAK,EAAC,eAAe,IACvB,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,MACnC,WACE,KAAK,EAAC,cAAc,IAEnB,IAAI,CAAC,eAAe,KACnB,cACE,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,eAAe,gBACV,OAAO,EAClB,OAAO,EAAE,IAAI,CAAC,YAAY,IAE1B,cAAQ,IAAI,EAAC,MAAM,GAAG,CACf,CACV,EACA,IAAI,CAAC,MAAM,KACV,WAAK,KAAK,EAAC,cAAc,IACvB,YAAM,IAAI,EAAC,QAAQ,GAAG,CAClB,CACP,CACG,CACP,EACA,IAAI,CAAC,IAAI,KACR,WAAK,KAAK,EAAC,yBAAyB,IAClC,YAAM,IAAI,EAAC,MAAM,GAAG,CAChB,CACP,EACA,IAAI,CAAC,MAAM,KACV,WAAK,KAAK,EAAC,mBAAmB,GAAG,CAClC,EACA,IAAI,CAAC,MAAM,KACV,WAAK,KAAK,EAAE,4CAA4C,IAAI,CAAC,qBAAqB,EAAE,IAClF,YAAM,IAAI,EAAC,QAAQ,GAAG,CAClB,CACP,CACG,CACF,CACF,EACN;GACH;;;;;;","names":[],"sources":["./src/components/d-modal/d-modal.tsx"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\n\nimport { ClassMap } from '../../utils/component-interface';\nimport { PREFIX_BS } from '../../utils';\n\nimport { ModalSize, FullScreenFrom } from './d-modal-interface';\n\n@Component({ tag: 'd-modal' })\nexport class DModal {\n  @Element() el!: HTMLDModalElement;\n\n  /**\n   * the name of the modal\n   */\n  @Prop() name!: string;\n\n  /**\n   * Is backdrop static\n   */\n  @Prop() isStatic?: boolean;\n\n  /**\n   * Is modal scrollable\n   */\n  @Prop() isScrollable?: boolean;\n\n  /**\n   * Is modal centered\n   */\n  @Prop() isCentered?: boolean;\n\n  /**\n   * Is fullscreen in all sizes\n   */\n  @Prop() isFullScreen?: boolean;\n\n  /**\n   * Minimum size to apply the fullscreen\n   */\n  @Prop() fullScreenFrom?: FullScreenFrom;\n\n  /**\n   * Modal size\n   */\n  @Prop() modalSize?: ModalSize;\n\n  /**\n   * No display close button\n   */\n  @Prop() showCloseButton?: boolean;\n\n  /**\n   * Footer action direction\n   */\n  @Prop() footerActionPlacement?: 'start' | 'end' | 'fill' | 'center' = 'fill';\n\n  /**\n   * Emitted when the input value has changed\n   */\n  @Event() eventClose!: EventEmitter<void>;\n\n  componentWillLoad() {\n    this.header = !!this.el.querySelector('[slot=\"header\"]');\n    this.body = !!this.el.querySelector('[slot=\"body\"]');\n    this.footer = !!this.el.querySelector('[slot=\"footer\"]');\n  }\n\n  private header!: boolean;\n  private body!: boolean;\n  private footer!: boolean;\n\n  private closeHandler = () => {\n    this.eventClose.emit();\n  };\n\n  private fullScreenClass(): string {\n    if (this.isFullScreen) {\n      if (this.fullScreenFrom) {\n        return `modal-fullscreen-${this.fullScreenFrom}-down`;\n      }\n      return 'modal-fullscreen';\n    }\n    return '';\n  }\n\n  private generateModalDialogClasses(): ClassMap {\n    return {\n      'modal-dialog': true,\n      'modal-dialog-centered': !!this.isCentered,\n      'modal-dialog-scrollable': !!this.isScrollable,\n      [`modal-${this.modalSize}`]: !!this.modalSize,\n      [this.fullScreenClass()]: !!this.isFullScreen,\n    };\n  }\n\n  render() {\n    return (\n      <div\n        class=\"modal fade show\"\n        id={this.name}\n        tabindex=\"-1\"\n        aria-labelledby={`${this.name}Label`}\n        aria-hidden=\"false\"\n        {...this.isStatic && ({\n          [`data-${PREFIX_BS}backdrop`]: 'static',\n          [`data-${PREFIX_BS}keyboard`]: 'false',\n        })}\n      >\n        <div class={this.generateModalDialogClasses()}>\n          <div class=\"modal-content\">\n            {(this.header || this.showCloseButton) && (\n              <div\n                class=\"modal-header\"\n              >\n                {this.showCloseButton && (\n                  <button\n                    type=\"button\"\n                    class=\"d-modal-close\"\n                    aria-label=\"Close\"\n                    onClick={this.closeHandler}\n                  >\n                    <d-icon icon=\"x-lg\" />\n                  </button>\n                )}\n                {this.header && (\n                  <div class=\"d-modal-slot\">\n                    <slot name=\"header\" />\n                  </div>\n                )}\n              </div>\n            )}\n            {this.body && (\n              <div class=\"d-modal-slot modal-body\">\n                <slot name=\"body\" />\n              </div>\n            )}\n            {this.footer && (\n              <div class=\"d-modal-separator\" />\n            )}\n            {this.footer && (\n              <div class={`d-modal-slot modal-footer d-modal-action-${this.footerActionPlacement}`}>\n                <slot name=\"footer\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}