{"file":"m-input-counter.entry.js","mappings":"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","names":[],"sources":["./src/components/m-input-counter/m-input-counter.tsx"],"sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  EventEmitter,\n  Event,\n  State,\n  Watch,\n} from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'm-input-counter' })\nexport class MInputCounter {\n  /**\n   * The id of the input\n   */\n  @Prop() mId!: string;\n\n  /**\n   * The name of the input\n   */\n  @Prop() name?: string;\n\n  /**\n   * The label text\n   */\n  @Prop() label = '';\n\n  /**\n   * Icon for the label text\n   */\n  @Prop() labelIcon?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyClass?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyPrefix?: string;\n\n  /**\n   * The value of the input\n   */\n  @Prop() value!: number;\n\n  /**\n   * The input is disabled\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Flag to read only the input\n   */\n  @Prop() isReadOnly = false;\n\n  /**\n   * Flag for loading state.\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyPrefix?: string;\n\n  /**\n   * Icon for the left\n   * */\n  @Prop() iconStart = 'dash-square';\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyClass?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyPrefix?: string;\n\n  /**\n   * Icon for the end\n   * */\n  @Prop() iconEnd = 'plus-square';\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyPrefix?: string;\n\n  /**\n   * Hint to display\n   */\n  @Prop() hint?: string;\n\n  /**\n   * Add is-invalid class\n   */\n  @Prop() isInvalid = false;\n\n  /**\n   * Add is-valid class\n   */\n  @Prop() isValid = false;\n\n  /**\n   * * The min value of the input\n   */\n  @Prop() minValue!: number;\n\n  /**\n   * * The max value of the input\n   */\n  @Prop() maxValue!: number;\n\n  /**\n   * Event for input change\n   */\n  @Event({ eventName: 'mChange' }) mChange!: EventEmitter<number>;\n\n  /**\n   * Event for button pressed\n   */\n  @Event({ eventName: 'mClick' }) mClick!: EventEmitter<number>;\n\n  @State() internalIsInvalid = false;\n\n  @State() internalValue = 0;\n\n  private changeHandler = (event: CustomEvent<string | number>) => {\n    event.stopPropagation();\n    this.internalValue = (event.detail !== '' && typeof event.detail === 'string')\n      ? parseInt(event.detail, 10)\n      : 0;\n    this.mChange.emit(this.internalValue);\n  };\n\n  private clickHandler = (action: boolean) => {\n    const currentValue = this.internalValue;\n    if (action) {\n      const temp = Number(currentValue) + 1;\n      this.internalValue = temp <= this.maxValue ? temp : this.maxValue;\n    } else {\n      const temp = Number(currentValue) - 1;\n      this.internalValue = temp >= this.minValue ? temp : this.minValue;\n    }\n    this.mClick.emit(this.internalValue);\n  };\n\n  @Watch('internalValue')\n  watchValidValueHandler() {\n    this.internalIsInvalid = !(\n      this.internalValue >= this.minValue\n        && this.internalValue <= this.maxValue\n    );\n  }\n\n  @Watch('value')\n  watchValueHandler() {\n    this.internalValue = this.value;\n  }\n\n  connectedCallback() {\n    this.internalValue = this.value;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private generateStyleVariables() {\n    return { [`--${PREFIX_BS}m-input-component-form-control-text-align`]: 'center' };\n  }\n\n  render() {\n    return (\n      <m-input\n        style={this.generateStyleVariables()}\n        mId={this.mId}\n        name={this.name}\n        label={this.label}\n        labelIcon={this.labelIcon}\n        labelIconFamilyClass={this.labelIconFamilyClass}\n        labelIconFamilyPrefix={this.labelIconFamilyPrefix}\n        value={this.internalValue}\n        iconStart={this.iconStart}\n        iconStartFamilyClass={this.iconStartFamilyClass}\n        iconStartFamilyPrefix={this.iconStartFamilyPrefix}\n        iconEnd={this.iconEnd}\n        iconEndFamilyClass={this.iconStartFamilyClass}\n        iconEndFamilyPrefix={this.iconStartFamilyPrefix}\n        isDisabled={this.isDisabled}\n        isReadOnly={this.isReadOnly}\n        isLoading={this.isLoading}\n        hint={this.hint}\n        isInvalid={this.internalIsInvalid || this.isInvalid}\n        isValid={this.isValid}\n        type=\"number\"\n        onMChange={this.changeHandler}\n        onMIconStartClick={(event) => {\n          event.stopPropagation();\n          this.clickHandler(false);\n        }}\n        onMIconEndClick={(event) => {\n          event.stopPropagation();\n          this.clickHandler(true);\n        }}\n      />\n    );\n  }\n}\n"],"version":3}