{"file":"d-input-select.entry.js","mappings":"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","names":[],"sources":["./src/components/d-input-select/d-input-select.tsx"],"sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  h,\n  Prop,\n  Event,\n} from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'd-input-select' })\nexport class DInputSelect implements ComponentInterface {\n  /**\n   * The id of the input\n   */\n  @Prop() innerId!: string;\n\n  /**\n   * The name of the input\n   */\n  @Prop() name?: string;\n\n  /**\n   * The label text\n   */\n  @Prop() label = '';\n\n  /**\n   * The select options\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Prop() options: Array<Record<string, unknown>> = [];\n\n  /**\n   * Icon for the label text\n   */\n  @Prop() labelIcon?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyClass?: string;\n\n  /**\n   * Icon label family prefix\n   */\n  @Prop() labelIconFamilyPrefix?: string;\n\n  /**\n   * Flag to disable the input\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Flag for loading state.\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyPrefix?: string;\n\n  /**\n   * The start icon for the select\n   */\n  @Prop() iconStart?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyClass?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyPrefix?: string;\n\n  /**\n   * The end icon for the select\n   */\n  @Prop() iconEnd?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyPrefix?: string;\n\n  /**\n   * Hint to display\n   */\n  @Prop() hint?: string;\n\n  /**\n   * The value selected of the component\n   */\n  @Prop() selectedOption?: Record<string, unknown>;\n\n  /**\n   * Callback to extract the value from the option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,class-methods-use-this\n  @Prop() valueExtractor: (item: any) => string | number = (item) => item?.value;\n\n  /**\n   * Callback to extract the label from the option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,class-methods-use-this\n  @Prop() labelExtractor: (item: any) => string = (item) => item?.label;\n\n  /**\n   * Emitted when the select value has changed\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Event() eventChange!: EventEmitter;\n\n  /**\n   * Emitted when blur the input\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Event() eventBlur!: EventEmitter;\n\n  /**\n   * Emitted when click on the left icon\n   */\n  @Event() eventIconStartClick!: EventEmitter<MouseEvent>;\n\n  /**\n   * Emitted when click on the right icon\n   */\n  @Event() eventIconEndClick!: EventEmitter<MouseEvent>;\n\n  private changeHandler = (event: Event) => {\n    const { value } = event.target as HTMLSelectElement;\n    this.eventChange.emit(\n      this.options.find((option) => this.valueExtractor(option).toString() === value),\n    );\n  };\n\n  private blurHandler = (event: Event) => {\n    this.eventBlur.emit(event);\n  };\n\n  private iconStartClickHandler = (event: MouseEvent) => {\n    this.eventIconStartClick.emit(event);\n  };\n\n  private iconEndClickHandler = (event: MouseEvent) => {\n    this.eventIconEndClick.emit(event);\n  };\n\n  render() {\n    return (\n      <div class=\"d-input\">\n        {(this.label) && (\n          <label htmlFor={this.innerId}>\n            {this.label}\n            {this.labelIcon && (\n              <d-icon\n                class=\"mdinput-icon\"\n                icon={this.labelIcon}\n                size={`var(--${PREFIX_BS}input-label-font-size)`}\n                familyClass={this.labelIconFamilyClass}\n                familyPrefix={this.labelIconFamilyPrefix}\n              />\n            )}\n          </label>\n        )}\n        <div class=\"d-input-control\">\n          <div\n            class={{\n              'input-group': true,\n              disabled: this.isDisabled || this.isLoading,\n            }}\n          >\n            {this.iconStart && (\n              <button\n                type=\"button\"\n                class=\"input-group-text\"\n                id={`${this.innerId}Start`}\n                onClick={this.iconStartClickHandler}\n                disabled={this.isDisabled || this.isLoading}\n              >\n                {this.iconStart && (\n                  <d-icon\n                    class=\"d-input-icon\"\n                    icon={this.iconStart}\n                    familyClass={this.iconStartFamilyClass}\n                    familyPrefix={this.iconStartFamilyPrefix}\n                  />\n                )}\n              </button>\n            )}\n            <select\n              id={this.innerId}\n              name={this.name}\n              class={{ 'form-select': true }}\n              aria-label={this.label}\n              disabled={this.isDisabled || this.isLoading}\n              aria-describedby={`${this.innerId}Add ${this.innerId}Hint`}\n              onChange={this.changeHandler}\n              onBlur={this.blurHandler}\n            >\n              {this.options.map((option) => (\n                <option\n                  value={this.valueExtractor(option)}\n                  selected={\n                    this.selectedOption\n                      && this.valueExtractor(option) === this.valueExtractor(this.selectedOption)\n                  }\n                >\n                  {this.labelExtractor(option)}\n                </option>\n              ))}\n            </select>\n            {(this.iconEnd && !this.isLoading) && (\n              <button\n                type=\"button\"\n                class=\"input-group-text\"\n                id={`${this.innerId}End`}\n                onClick={this.iconEndClickHandler}\n                disabled={this.isDisabled || this.isLoading}\n              >\n                {this.iconEnd && (\n                  <d-icon\n                    class=\"d-input-icon\"\n                    icon={this.iconEnd}\n                    familyClass={this.iconEndFamilyClass}\n                    familyPrefix={this.iconEndFamilyPrefix}\n                  />\n                )}\n              </button>\n            )}\n            {this.isLoading && (\n              <div class=\"input-group-text form-control-icon loading\">\n                <span\n                  class=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                >\n                  <span class=\"visually-hidden\">Loading...</span>\n                </span>\n              </div>\n            )}\n          </div>\n          {this.hint && (\n            <div\n              class=\"form-text\"\n              id={`${this.innerId}Hint`}\n            >\n              {this.hint}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}