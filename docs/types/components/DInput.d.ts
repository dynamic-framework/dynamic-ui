import type { CSSProperties, ChangeEvent, FocusEvent, MouseEvent, ReactNode, WheelEvent } from 'react';
import type { EndIcon, FamilyIcon, LabelIcon, StartIcon } from './interface';
type Ref = {
    blur: () => void;
    focus: () => void;
};
declare const ForwardedDInput: import("react").ForwardRefExoticComponent<FamilyIcon & LabelIcon & StartIcon & EndIcon & {
    id: string;
    className?: string | undefined;
    style?: CSSProperties | undefined;
    name?: string | undefined;
    label?: string | undefined;
    placeholder?: string | undefined;
    type?: string | undefined;
    value?: string | number | undefined;
    innerInputMode?: 'text' | 'search' | 'email' | 'tel' | 'url' | 'none' | 'numeric' | 'decimal' | undefined;
    pattern?: string | undefined;
    isDisabled?: boolean | undefined;
    isReadOnly?: boolean | undefined;
    isLoading?: boolean | undefined;
    hint?: string | undefined;
    isInvalid?: boolean | undefined;
    isValid?: boolean | undefined;
    inputStart?: ReactNode;
    onChange?: ((event: ChangeEvent<HTMLInputElement>) => void) | undefined;
    onBlur?: ((event: FocusEvent<HTMLInputElement>) => void) | undefined;
    onFocus?: ((event: FocusEvent) => void) | undefined;
    onWheel?: ((event: WheelEvent) => void) | undefined;
    onIconStartClick?: ((event: MouseEvent) => void) | undefined;
    onIconEndClick?: ((event: MouseEvent) => void) | undefined;
} & import("react").RefAttributes<Ref>>;
export default ForwardedDInput;
