{"version":3,"file":"create-controlled-request.js","sourceRoot":"","sources":["../../../src/utils/create-controlled-request.ts"],"names":[],"mappings":"AAYA;;;;GAIG;AACH,MAAM,CAAC,OAAO,UAAU,uBAAuB,CAC7C,MAAqB,EACrB,MAA6B;EAE7B,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;EAC9C,OAAO;IACL,OAAO,EAAE,KAAK,IAAI,EAAE;MAClB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,OAAO,iCAChC,MAAM,KACT,MAAM,EAAE,eAAe,CAAC,MAAM,IAC9B,CAAC;MACH,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,KAAK,EAAE;GACrC,CAAC;AACJ,CAAC","sourcesContent":["import {\n  AxiosInstance,\n  AxiosRequestConfig,\n} from 'axios';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ControlledRequest<ResponseData, RequestData = any> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,max-len\n  perform: (config?: { data?: RequestData; params?: any }) => Promise<ResponseData>;\n  abort: () => void;\n};\n\n/**\n * @deprecated\n * @param client\n * @param config\n */\nexport default function createControlledRequest<T, R = T>(\n  client: AxiosInstance,\n  config: AxiosRequestConfig<T>,\n): ControlledRequest<R, T> {\n  const abortController = new AbortController();\n  return {\n    perform: async () => {\n      const { data } = await client.request<R>({\n        ...config,\n        signal: abortController.signal,\n      });\n      return data;\n    },\n    abort: () => abortController.abort(),\n  };\n}\n"]}