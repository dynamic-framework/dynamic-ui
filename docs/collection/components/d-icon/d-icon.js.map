{"version":3,"file":"d-icon.js","sourceRoot":"","sources":["../../../../src/components/d-icon/d-icon.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n} from '@stencil/core';\n\nimport state from '../../utils/store';\nimport type { ClassMap } from '../../utils/component-interface';\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'd-icon' })\nexport class DIcon {\n  /**\n   * Name of icon to use (in kebab-case)\n   */\n  @Prop() icon!: string;\n\n  /**\n   * Theme of the icon\n   */\n  @Prop() theme?: string;\n\n  /**\n   * Icon class\n   */\n  @Prop() innerClass?: string;\n\n  /**\n   * Size of the icon in css length unit\n   */\n  @Prop() size?: string = '1.5rem';\n\n  /**\n   * Enable loading animation\n   */\n  @Prop() isLoading = false;\n\n  /**\n   * Loading animation duration, in seconds\n   */\n  @Prop() loadingDuration = 1.8;\n\n  /**\n   * Add circle around the icon\n   */\n  @Prop() hasCircle = false;\n\n  /**\n   * Circle size in css length unit\n   */\n  @Prop() circleSize?: string = `calc(var(--${PREFIX_BS}icon-component-size) * 1)`;\n\n  /**\n   * Icon color in css color unit or var\n   */\n  @Prop() color?: string;\n\n  /**\n   * Icon background color in css color unit or var\n   */\n  @Prop() backgroundColor?: string;\n\n  /**\n   * Change the family class to use another icon suite\n   */\n  @Prop() familyClass?: string = state.iconFamilyClass;\n\n  /**\n   * Change the family prefix to use another icon suite\n   */\n  @Prop() familyPrefix?: string = state.iconFamilyPrefix;\n\n  private getColorStyle() {\n    if (this.color) {\n      return { [`--${PREFIX_BS}icon-component-color`]: this.color };\n    }\n\n    if (this.theme) {\n      return { [`--${PREFIX_BS}icon-component-color`]: `var(--${PREFIX_BS}${this.theme})` };\n    }\n\n    return {};\n  }\n\n  private getBackgroundStyle() {\n    if (this.backgroundColor) {\n      return { [`--${PREFIX_BS}icon-component-bg-color`]: this.backgroundColor };\n    }\n\n    if (this.hasCircle) {\n      if (this.theme) {\n        return { [`--${PREFIX_BS}icon-component-bg-color`]: `rgba(var(--${PREFIX_BS}${this.theme}-rgb), 0.1)` };\n      }\n      return { [`--${PREFIX_BS}icon-component-bg-color`]: `rgba(var(--${PREFIX_BS}body-color-rgb), 0.1)` };\n    }\n\n    return {};\n  }\n\n  private getCircleSizeStyle() {\n    if (this.hasCircle) {\n      return { [`--${PREFIX_BS}icon-component-padding`]: this.circleSize };\n    }\n    return { [`--${PREFIX_BS}icon-component-padding`]: '0' };\n  }\n\n  private generateStyleVariables() {\n    return {\n      [`--${PREFIX_BS}icon-component-size`]: this.size,\n      [`--${PREFIX_BS}icon-component-loading-duration`]: `${this.loadingDuration}s`,\n      ...this.getColorStyle(),\n      ...this.getBackgroundStyle(),\n      ...this.getCircleSizeStyle(),\n    };\n  }\n\n  private generateClasses(): ClassMap {\n    return {\n      'd-icon': true,\n      [`${this.innerClass}`]: !!this.innerClass,\n      [this.familyClass || state.iconFamilyClass]: true,\n      [`${this.familyPrefix || state.iconFamilyPrefix}${this.icon}`]: true,\n      'd-icon-loading': this.isLoading,\n    };\n  }\n\n  render() {\n    return (\n      <i\n        class={this.generateClasses()}\n        style={this.generateStyleVariables()}\n      />\n    );\n  }\n}\n"]}