{"version":3,"file":"d-input.js","sourceRoot":"","sources":["../../../../src/components/d-input/d-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ComponentInterface, EventEmitter } from '@stencil/core';\nimport {\n  Component,\n  h,\n  Prop,\n  Event,\n  Method,\n  Element,\n} from '@stencil/core';\n\nimport { PREFIX_BS } from '../../utils';\n\n@Component({ tag: 'd-input' })\nexport class DInput implements ComponentInterface {\n  @Element() el!: HTMLDInputElement;\n  /**\n   * The id of the input\n   */\n  @Prop() innerId!: string;\n\n  /**\n   * The name of the input\n   */\n  @Prop() name?: string;\n\n  /**\n   * The label text\n   */\n  @Prop() label = '';\n\n  /**\n   * Icon for the label text\n   */\n  @Prop() labelIcon?: string;\n\n  /**\n   * Icon label family class\n   */\n  @Prop() labelIconFamilyClass?: string;\n\n  /**\n   * Icon label family prefix\n   */\n  @Prop() labelIconFamilyPrefix?: string;\n\n  /**\n   * The placeholder text\n   */\n  @Prop() placeholder = '';\n\n  /**\n   * The type of the input\n   */\n  @Prop() type = 'text';\n\n  /**\n   * The value of the input\n   */\n  @Prop() value: string | number = '';\n\n  /**\n   * Input mode\n   */\n  @Prop() innerInputMode?: string;\n\n  /**\n   * Pattern to validate\n   */\n  @Prop() pattern?: string;\n\n  /**\n   * Flag to disable the input\n   */\n  @Prop() isDisabled = false;\n\n  /**\n   * Flag to read only the input\n   */\n  @Prop() isReadOnly = false;\n\n  /**\n   * Flag for loading state.\n  */\n  @Prop() isLoading = false;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconFamilyPrefix?: string;\n\n  /**\n   * Icon to display on input left\n   */\n  @Prop() iconStart?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyClass?: string;\n\n  /**\n   * Left icon family class\n   */\n  @Prop() iconStartFamilyPrefix?: string;\n\n  /**\n   * Icon to display on input right\n   */\n  @Prop() iconEnd?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyClass?: string;\n\n  /**\n   * Right icon family class\n   */\n  @Prop() iconEndFamilyPrefix?: string;\n\n  /**\n   * Hint to display\n   */\n  @Prop() hint?: string;\n\n  /**\n   * Add is-invalid class\n   */\n  @Prop() isInvalid = false;\n\n  /**\n   * Add is-valid class\n   */\n  @Prop() isValid = false;\n\n  /**\n   * Set focus to internal input\n   */\n  @Method()\n  async innerFocus() {\n    this.htmlInputElement?.focus();\n  }\n\n  /**\n   * Set blur to internal input\n   */\n  @Method()\n  async innerBlur() {\n    this.htmlInputElement?.blur();\n  }\n\n  /**\n   * Emitted when the input value has changed\n   */\n  @Event() eventChange!: EventEmitter<string | number>;\n\n  /**\n   * Emitted when blur the input\n   */\n  @Event() eventBlur!: EventEmitter;\n\n  /**\n   * Emitted when blur the input\n   */\n  @Event() eventFocus!: EventEmitter;\n\n  /**\n   * Emitted when blur the input\n   */\n  @Event() eventWheel!: EventEmitter;\n\n  /**\n   * Emitted when click on the left icon\n   */\n  @Event() eventIconStartClick!: EventEmitter<MouseEvent>;\n\n  /**\n   * Emitted when click on the right icon\n   */\n  @Event() eventIconEndClick!: EventEmitter<MouseEvent>;\n\n  /**\n   * HTML d-input element\n   */\n  private htmlInputElement?: HTMLInputElement;\n\n  private changeHandler = (event: Event) => {\n    this.eventChange.emit((event.target as HTMLInputElement).value);\n  };\n\n  private blurHandler = (event: Event) => {\n    this.eventBlur.emit(event);\n  };\n\n  private focusHandler = (event: Event) => {\n    this.eventFocus.emit(event);\n  };\n\n  private wheelHandler = (event: Event) => {\n    this.eventWheel.emit(event);\n  };\n\n  private iconStartClickHandler = (event: MouseEvent) => {\n    this.eventIconStartClick.emit(event);\n  };\n\n  private iconEndClickHandler = (event: MouseEvent) => {\n    this.eventIconEndClick.emit(event);\n  };\n\n  private inputStart!: HTMLElement | null;\n  private inputEnd!: HTMLElement | null;\n\n  componentWillLoad() {\n    this.inputStart = this.el.querySelector('[slot=\"input-start\"]');\n    this.inputEnd = this.el.querySelector('[slot=\"input-end\"]');\n  }\n\n  render() {\n    return (\n      <div class=\"d-input\">\n        {this.label && (\n          <label htmlFor={this.innerId}>\n            {this.label}\n            {this.labelIcon && (\n              <d-icon\n                class=\"d-input-icon\"\n                icon={this.labelIcon}\n                size={`var(--${PREFIX_BS}input-label-font-size)`}\n                familyClass={this.labelIconFamilyClass}\n                familyPrefix={this.labelIconFamilyPrefix}\n              />\n            )}\n          </label>\n        )}\n        <div class=\"d-input-control\">\n          <div\n            class={{\n              'input-group': true,\n              'has-validation': this.isInvalid,\n              disabled: this.isDisabled || this.isLoading,\n            }}\n          >\n            {!!this.inputStart && (\n              <div class=\"input-group-text\">\n                <slot name=\"input-start\" />\n              </div>\n            )}\n            {this.iconStart && (\n              <button\n                type=\"button\"\n                class=\"input-group-text\"\n                id={`${this.innerId}Start`}\n                onClick={this.iconStartClickHandler}\n                disabled={this.isDisabled || this.isLoading}\n              >\n                {this.iconStart && (\n                  <d-icon\n                    class=\"d-input-icon\"\n                    icon={this.iconStart}\n                    familyClass={this.iconStartFamilyClass}\n                    familyPrefix={this.iconStartFamilyPrefix}\n                  />\n                )}\n              </button>\n            )}\n            <input\n              // eslint-disable-next-line no-return-assign\n              ref={(el) => (this.htmlInputElement = el)}\n              id={this.innerId}\n              name={this.name}\n              type={this.type}\n              class={{\n                'form-control': true,\n                'is-invalid': this.isInvalid,\n                'is-valid': this.isValid,\n              }}\n              placeholder={this.placeholder}\n              aria-label={this.label}\n              disabled={this.isDisabled || this.isLoading}\n              readOnly={this.isReadOnly}\n              value={this.value}\n              aria-describedby={`${this.innerId}Add ${this.innerId}Hint`}\n              inputmode={this.innerInputMode}\n              pattern={this.pattern}\n              onInput={this.changeHandler}\n              onBlur={this.blurHandler}\n              onFocus={this.focusHandler}\n              onWheel={this.wheelHandler}\n            />\n            {((this.isInvalid || this.isValid) && !this.iconEnd && !this.isLoading) && (\n              <span\n                class=\"input-group-text\"\n                id={`${this.innerId}State`}\n              >\n                <d-icon\n                  class=\"d-input-validation-icon\"\n                  icon={this.isInvalid ? 'exclamation-circle' : 'check'}\n                  familyClass={this.iconFamilyClass}\n                  familyPrefix={this.iconFamilyPrefix}\n                />\n              </span>\n            )}\n            {(this.iconEnd && !this.isLoading) && (\n              <button\n                type=\"button\"\n                class=\"input-group-text\"\n                id={`${this.innerId}End`}\n                onClick={this.iconEndClickHandler}\n                disabled={this.isDisabled || this.isLoading}\n              >\n                {this.iconEnd && (\n                  <d-icon\n                    class=\"d-input-icon\"\n                    icon={this.iconEnd}\n                    familyClass={this.iconEndFamilyClass}\n                    familyPrefix={this.iconEndFamilyPrefix}\n                  />\n                )}\n              </button>\n            )}\n            {!!this.inputEnd && (\n              <div class=\"input-group-text\">\n                <slot name=\"input-end\" />\n              </div>\n            )}\n            {this.isLoading && (\n              <div class=\"input-group-text d-input-icon\">\n                <span\n                  class=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                >\n                  <span class=\"visually-hidden\">Loading...</span>\n                </span>\n              </div>\n            )}\n          </div>\n          {this.hint && (\n            <div\n              class=\"form-text\"\n              id={`${this.innerId}Hint`}\n            >\n              {this.hint}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]}